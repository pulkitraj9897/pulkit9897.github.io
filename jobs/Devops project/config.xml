<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1520.v56d65e3b_4566">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@4106.v7a_8a_8176d450">
    <script>pipeline {
    agent any

    environment {
        LOCAL_PROJECT_DIR = &apos;/var/local/flask-site&apos;
        BRANCH_NAME = &apos;main&apos;
        GITHUB_REPO = &apos;https://github.com/pulkitraj9897/pulkit9897.github.io.git&apos;
    }

    stages {
        stage(&apos;Prepare Workspace&apos;) {
            steps {
                cleanWs()
            }
        }

        stage(&apos;Push Changes&apos;) {
            steps {
                script {
                    withCredentials([string(credentialsId: &apos;devops&apos;, variable: &apos;GITHUB_TOKEN&apos;)]) {
                        sh &quot;&quot;&quot;
                            # Create a clean temporary directory
                            TEMP_DIR=\$(mktemp -d)
                            
                            # Clone the repository into temp directory
                            git clone ${GITHUB_REPO} \$TEMP_DIR
                            
                            # Copy your local files to the cloned repository
                            cp -r ${LOCAL_PROJECT_DIR}/* \$TEMP_DIR/
                            
                            # Configure git
                            cd \$TEMP_DIR
                            git config user.email &quot;pulkitraj9897@gmail.com&quot;
                            git config user.name &quot;pulkit9897&quot;
                            
                            # Commit and push changes using the token
                            git add .
                            git commit -m &quot;Automated commit ${BUILD_NUMBER}&quot; || echo &quot;No changes to commit&quot;
                            git push https://\${GITHUB_TOKEN}@github.com/pulkitraj9897/pulkit9897.github.io.git ${BRANCH_NAME}
                            
                            # Clean up
                            cd ..
                            rm -rf \$TEMP_DIR
                        &quot;&quot;&quot;
                    }
                }
            }
        }
    }

    post {
        success {
            echo &apos;ðŸš€ Pushed from local folder successfully!&apos;
        }
        failure {
            echo &apos;ðŸ˜“ Push failed, check your logs.&apos;
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>